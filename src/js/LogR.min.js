var LogType=Object.freeze({Debug:{name:"Debug",value:0,colour:"green",shortString:"DEB"},Info:{name:"Info",value:1,colour:"blue",shortString:"INF"},Warning:{name:"Warning",value:2,colour:"yellow",shortString:"WAR"},Error:{name:"Error",value:3,colour:"red",shortString:"ERR"}}),Log=function(b,a,c){this.dateTime=b;this.logType=a;this.message=c};Log.prototype.toString=function(){return"["+this.dateTime+"] ["+this.logType.shortString+"] ["+this.message+"]"};
var LogR=function(){this.enableLogs=!0;this.logToConsole=!1;this.logLevel=0;this.logs=[];this.errorCount=this.warningCount=this.infoCount=this.debugCount=0};LogR.prototype.shouldLog=function(b){return b.value>=this.logLevel};
LogR.prototype.log=function(b,a){if(this.enableLogs&&this.shouldLog(b)){var c=(new Date).toISOString(),c=c.replace("T"," "),c=c.replace("Z",""),c=new Log(c,b,a);this.logs.push(c);switch(b){case LogType.Debug:this.debugCount++;break;case LogType.Info:this.infoCount++;break;case LogType.Warning:this.warningCount++;break;case LogType.Error:this.errorCount++}this.logToConsole&&console.log(c.toString())}};
LogR.prototype.clearLogs=function(){this.logs=[];this.errorCount=this.warningCount=this.infoCount=this.debugCount=0};LogR.prototype.toString=function(){for(var b="",a=0;a<this.logs.length;a++)b+=this.logs[a].toString()+"\n";return b};LogR.prototype.toHTML=function(b){for(var a="",c=0;c<this.logs.length;c++)a+="<span "+(b?'style="color: '+this.logs[c].logType.colour+'"':'class="logr-entry"')+">"+this.logs[c].toString()+"</span><br>\n";return a};
LogR.prototype.toTable=function(b){for(var a=b?'style="padding: 10px; border: 1px solid black;"':'class="logr-tbl-cell"',c="<table "+(b?'style="border-collapse: collapse; text-align: left; background-color: #d7d7d7; font-family: monospace;"':'class="logr-tbl"')+"><tr><th "+a+">Date Time</th><th "+a+">Log Type</th><th "+a+">Message</th></tr>",d=0;d<this.logs.length;d++)c+="<tr "+(b?'style="color: '+this.logs[d].logType.colour+'"':'class="logr-tbl-row"')+"><td "+a+">"+this.logs[d].dateTime+"</td><td "+
a+">"+this.logs[d].logType.shortString+"</td><td "+a+">"+this.logs[d].message+"</td></tr>\n";return c+"</table>"};
LogR.prototype.toDocument=function(){var b=this.toTable(!0),a=(new Date).toJSON().slice(0,10);return'<!DOCTYPE html>\n<head>\n<meta charset="utf-8">\n<title>LogR: '+a+'</title>\n<head><link rel="icon" type="image/x-icon" href="favicon.ico">\n</head>\n<html>\n<body>\n'+('<table style="font-family: monospace;">\n<tr><td>Date:</td><td>'+a+"</td></tr>\n<tr><td>Entries:</td><td>"+this.logs.length+"</td></tr>\n<tr><td>Debug Messages:</td><td>"+this.debugCount+"</td></tr>\n<tr><td>Info Messages:</td><td>"+
this.infoCount+"</td></tr>\n<tr><td>Warning Messages:</td><td>"+this.warningCount+"</td></tr>\n<tr><td>Error Messages:</td><td>"+this.errorCount+"</td></tr>\n</table>\n")+"\n<br>\n<br>\n"+b+"\n</body>\n</html>"};
LogR.prototype.downloadLogs=function(){if(0<this.logs.length){var b="LogR_"+(new Date).toJSON().slice(0,10)+".txt",a=document.createElement("a"),c=encodeURIComponent(this.toString());a.setAttribute("href","data:text/plain;charset=utf-8,"+c);a.setAttribute("download",b);a.style.display="none";document.body.appendChild(a);a.click();document.body.removeChild(a)}};
LogR.prototype.openLogsInNewWindow=function(){if(0<this.logs.length){var b=window.open();b.document.open();b.document.write(this.toDocument());b.document.close()}};
